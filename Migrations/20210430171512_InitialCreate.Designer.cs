// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace BlockShop2.Migrations
{
    [DbContext(typeof(BlockShopContext))]
    [Migration("20210430171512_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Models.Block", b =>
                {
                    b.Property<int>("BlockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("BlockID");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("Models.BlockItem", b =>
                {
                    b.Property<int>("BlockItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BlockID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Volume")
                        .HasColumnType("REAL");

                    b.HasKey("BlockItemID");

                    b.HasIndex("BlockID");

                    b.HasIndex("ProductId");

                    b.ToTable("BlockItems");
                });

            modelBuilder.Entity("Models.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("price")
                        .HasColumnType("INTEGER");

                    b.Property<double>("taxrate")
                        .HasColumnType("REAL");

                    b.HasKey("PriceId");

                    b.HasIndex("ProductId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barcode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Models.BlockItem", b =>
                {
                    b.HasOne("Models.Block", null)
                        .WithMany("BlockItems")
                        .HasForeignKey("BlockID");

                    b.HasOne("Models.Product", "Product")
                        .WithMany("BlockItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Models.Price", b =>
                {
                    b.HasOne("Models.Product", null)
                        .WithMany("Prices")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Models.Block", b =>
                {
                    b.Navigation("BlockItems");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Navigation("BlockItems");

                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
